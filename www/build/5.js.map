{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/pages/login/login.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACZ;AAUpC;IAAA;IAA8B,CAAC;IAAlB,eAAe;QAR3B,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,yDAAS;aACV;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,yDAAS,CAAC;aACpC;SACF,CAAC;OACW,eAAe,CAAG;IAAD,sBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACZc;AACkC;AACS;AAI5B;AAOzD;IAUE,mBAAmB,OAAsB,EAAS,SAAoB,EAAS,WAA0B,EAAQ,EAAe,EAAS,WAA+B;QAArJ,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAS,gBAAW,GAAX,WAAW,CAAe;QAAQ,OAAE,GAAF,EAAE,CAAa;QAAS,gBAAW,GAAX,WAAW,CAAoB;QARxK,gBAAW,GAAI,EAAe,CAAC;QAK/B,iBAAY,GAAQ,UAAU,CAAC;QAC/B,YAAO,GAAS,KAAK,CAAC;QAGpB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC5B,OAAO,EAAG,CAAC,IAAI,EAAE,kEAAU,CAAC,OAAO,CAAC,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC3D,UAAU,EAAE,CAAC,IAAI,EAAE,kEAAU,CAAC,OAAO,CAAC,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;SAC9D,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC7C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;IACrD,CAAC;IAED,kCAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;IAC1C,CAAC;IACD,iCAAa,GAAb;IAEA,CAAC;IACD,2BAAO,GAAP;QAAA,iBAiBC;QAhBC,IAAI,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YACnC,OAAO,EAAE,aAAa;SACvB,CAAC,CAAC;QACH,MAAM,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,UAAC,GAAS;YACtD,IAAG,CAAC,GAAG,CAAC,IAAI,EAAC;gBACT,MAAM,CAAC,OAAO,EAAE,CAAC;gBACjB,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;aACnC;iBACG;gBACF,MAAM,CAAC,OAAO,EAAE,CAAC;gBACjB,KAAK,CAAC,GAAG,CAAC,CAAC;aACZ;YACD,MAAM,CAAC,OAAO,EAAE,CAAC;QAErB,CAAC,CAAC;IACN,CAAC;IACD,4BAAQ,GAAR;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACpC,CAAC;IACD,kCAAc,GAAd;QACE,IAAG,IAAI,CAAC,YAAY,IAAI,UAAU,EAAC;YACjC,IAAI,CAAC,YAAY,GAAC,MAAM,CAAC;YACzB,IAAI,CAAC,OAAO,GAAC,SAAS,CAAC;SACxB;aAAI;YACH,IAAI,CAAC,YAAY,GAAC,UAAU,CAAC;YAC7B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;SACtB;IACH,CAAC;IAtDU,SAAS;QAJrB,wEAAS,CAAC;YACT,QAAQ,EAAE,YAAY;WACG;SAC1B,CAAC;kBAWwK;OAV7J,SAAS,CAuDrB;IAAD,CAAC;AAAA;SAvDY,SAAS,e","file":"5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { LoginPage } from './login';\n\n@NgModule({\n  declarations: [\n    LoginPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(LoginPage),\n  ],\n})\nexport class LoginPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, LoadingController } from 'ionic-angular';\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\n\nimport { usercreds } from '../../models/interfaces/usercreds';\n\nimport { AuthProvider }from  '../../providers/auth/auth';\n\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html',\n})\nexport class LoginPage {\n\n  credentials  = {} as usercreds;\n  authForm : FormGroup;\n  email: AbstractControl;\n\tpassword: AbstractControl;\n\n  passwordtype:string='password';\n  passeye:string ='eye';\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, public authService : AuthProvider,public fb: FormBuilder, public loadingCtrl : LoadingController ) {\n    this.authForm = this.fb.group({\n      'email' : [null, Validators.compose([Validators.required])],\n      'password': [null, Validators.compose([Validators.required])],\n    });\n    this.email = this.authForm.controls['email'];\n    this.password = this.authForm.controls['password'];\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad LoginPage');\n  }\n  forgePassword(){\n\n  }\n  doLogin(){\n    let loader = this.loadingCtrl.create({\n      content: 'Please wait'\n    });\n    loader.present();\n      this.authService.login(this.credentials).then((res : any) => {\n        if(!res.code){\n            loader.dismiss();\n            this.navCtrl.setRoot('ChatsPage');\n          }\n          else{\n            loader.dismiss();\n            alert(res);\n          }\n          loader.dismiss();\n          \n      })\n  }\n  doSignup(){\n    this.navCtrl.push('RagisterPage');\n  }\n  managePassword() {\n    if(this.passwordtype == 'password'){\n      this.passwordtype='text';\n      this.passeye='eye-off';\n    }else{\n      this.passwordtype='password';\n      this.passeye = 'eye';\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}